doctype html
html(lang="en")
    head
        title HeadJS loads css and js

        meta(charset="utf-8")

        meta(name="viewport" content="width=device-width, initial-scale=1")

        script(src="head.js")

        script(type="text/javascript").
            head.load([{ jquery: "//code.jquery.com/jquery-3.1.1.min.js" }, { ui: "//ajax.googleapis.com/ajax/libs/jqueryui/1.9.1/jquery-ui.min.js" }])

            "use strict";
            document.createStyleSheet = (function() {
                function makeStyleSheet(element) {
                    var element = document.createElement('style');
                    element.type = 'text/css';
                    var xhttp = new XMLHttpRequest();
                    xhttp.open("GET", "main.css", true);
                    xhttp.onreadystatechange = function() {
                        if (this.readyState == 4 && this.status == 200) {
                            var style = document.getElementsByTagName('head')[0].appendChild(element);
                            document.styleSheets[document.styleSheets.length - 1];
                            style.innerHTML = this.responseText;
                        }        
                    };
                    xhttp.send();
                }
                return makeStyleSheet;
            })();
            document.createStyleSheet();
            
            function onReady(callback) {
                var intervalID = window.setInterval(checkReady, 1500);
                function checkReady() {
                    if (document.getElementsByTagName('body')[0] !== undefined) {
                        window.clearInterval(intervalID);
                        callback.call(this);
                    }
                }
            }

            function show(id, value) {
                document.getElementById(id).style.display = value ? 'block' : 'none';
            }

            onReady(function () {
                show('page', true);
                show('loading', false);
            });


    body(id="page" class="landing")
        div.wrapper
            header.top
                div#logo.
                    Rocking Stone
                nav.navigation
                    ul
                        li
                            a(href="#chapter-one") Chapter One
                        li
                            a(href="#chapter-two") Chapter Two
                        li
                            a(href="#chapter-three") Chapter Three

            main(role="main")#container
                //-h1(class="articleTitle") HeadJS loads css and js
                
                section.content
                    <figure class="intro">
                        <img src="https://s3-us-west-2.amazonaws.com/s.cdpn.io/46992/diver2.jpg" alt="" />
                        <figcaption class="caption">
                            <h1>HeadJS loads css and js</h1>
                        </figcaption>
                        <span class="overlay">
                            <svg version="1.1" id="circle" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" viewBox="0 0 500 250" enable-background="new 0 0 500 250" xml:space="preserve" PreserveAspectRatio="none">
                                <path fill="#FFFFFF" d="M250,246.5c-97.85,0-186.344-40.044-250-104.633V250h500V141.867C436.344,206.456,347.85,246.5,250,246.5z"/>
                            </svg>
                        </span>
                    </figure>
                    <article class="copy">
                        <p class="teaser">Scroll down to see the effect. Actually I just wanted to code a layout idea with a curved cut header image, but ended up with this one. Even though it looks fine and performance quite good, I dislike the idea of having an inline svg in the markup, that only has an asthetic/design function. Any ideas on how to improve this pen are welcome.</p>
                        <p>If you browsing with Chrome, make sure you have the "experimental Web Platform features" enabled (go to chrome://flags/), to see image's mix-blend-mode effect.</p>
                    </article>

                    article
                        header
                            h2 Blog Post Title
                            p.
                                Posted 13th February 2014

                        section.content
                            .col1
                                h2 Load A Photo
                                p.
                                    some copy for col 1 here...
                                    
                                input(id="the-file-input" type="file")
                                    
                                #preview
                                    <!-- #preview image will be inserted here -->
                                
                                #data
                                    h2#name
                                    p(id="size")
                                    p(id="type")

                            .col2
                                p.
                                    some copy for col 2 here...

                            .col3
                                p.
                                    some copy for col 3 here...

                        aside.additional
                            h3 Google (GOOG)
                            p.
                                Google was founded in 1998 by Larry Page and Sergey Brin. The company...
                
                #loading

            footer.footerOuter
                div.footerInner.
                    copyright 2017 leo theo

        script(src=locals['dist/main.js'].substr(5))
        script(type="text/javascript").
            head.ready(["jquery", "ui"], function () {
                "use strict";
                console.log("head now loaded!");
                console.info("jquery loaded");
                if (window.console && head.browser.chrome) {
                    console.log("Chrome version ", head.browser.version);
                    $("#container").find("h2").css("color", "red");
                    console.info("ui loaded for chrome");
                    $("h1").effect("pulsate", { times:3 }, 2000);
                };
                if (head.browser.ff) {
                    console.log("Firefox version ", head.browser.version);
                    $("#container").find("h2").css("color", "blue");
                };
                if (head.browser.ie && head.browser.version < 9) {
                    console.log("IE version: ", head.browser.version);
                };
                if (head.browser.ie && head.browser.version > 9) {
                    console.log("IE version: ", head.browser.version);
                    $("#container").find("h2").css("color", "green");
                };
                if(head.draganddrop) {
                    console.log("we can move stuff!");
                }
                
                // render the image in our view
                function renderImage(file) {
                    
                    // generate a new FileReader object
                    var reader = new FileReader(),
                    the_url = reader.readAsDataURL(file);
                    
                    // inject an image with the src url
                    reader.onload = function(event) {
                        the_url = event.target.result
                        $('#preview').html("<img src='" + the_url + "' />")
                        
                        $('#preview').html("<img src='"+the_url+"' />")
                        $('#name').html(file.name)
                        $('#size').html(file.size)
                        $('#type').html(file.type)
                    }
                    
                    // when the file is read it triggers the onload event above.
                    the_url;
                }

                // detect a change in a file input with an id of “the-file-input”
                $("#the-file-input").change(function() {
                    
                    // will log a FileList object, view jpgs or pngs below
                    console.log(this.files[0])
                    
                    // grab the first image in the FileList object and pass it to the function
                    renderImage(this.files[0])
                });
                
                //- found this function here 
                //- http://stackoverflow.com/a/26831113

                function inViewport($el) {
                    var H = $(window).height(),
                        r = $el[0].getBoundingClientRect(), 
                        t=r.top, 
                        b=r.bottom;
                    return Math.max(0, t>0? H-t : (b<H?b:H));  
                }

                $(window).on("scroll resize", function(){
                    var window_offset = inViewport($('.intro')); 
                    $(".overlay").height(window_offset);
                        $(".caption").css("bottom", (window_offset / 4) );
                    });
                });
