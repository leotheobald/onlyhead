{
  "name": "onlyhead",
  "version": "1.0.0",
  "description": "An example of how to use headjs to load scripts and css",
  "main": "index.js",
  "author": "Leo (Jonathan) Theobald <leotheo@gmail.com>",
  "license": "MIT",
  "devDependencies": {
    "browserify": "^13.1.0",
    "hashmark": "^2.0.0",
    "http-server": "^0.7.3",
    "pug": "latest",
    "pug-cli": "latest",
    "jshint": "^2.5.10",
    "karma": "^0.12.28",
    "karma-browserify": "^1.0.0",
    "karma-cli": "^0.0.4",
    "karma-mocha": "^0.1.10",
    "karma-phantomjs-launcher": "^1.0.2",
    "live-reload": "^0.2.0",
    "minifyify": "^6.0.0",
    "mocha": "^2.0.1",
    "nodemon": "^1.2.1",
    "opener": "^1.4.0",
    "parallelshell": "^1.0.0",
    "phantomjs": "^2.1.7",
    "rimraf": "^2.2.8",
    "s3-cli": "^0.11.1",
    "less": "latest"
  },
  "scripts": {
    "clean": "rimraf dist/*",
    "prebuild": "npm run clean -s",
    "build": "npm run build:scripts -s && npm run build:styles -s && npm run build:markup -s && npm run build:head -s",
    "build:head": "browserify assets/scripts/head.js > dist/head.js",
    "build:scripts": "browserify -d assets/scripts/main.js -p [minifyify --compressPath . --map main.js.map --output dist/main.js.map] | hashmark -n dist/main.js -s -l 8 -m assets.json \"dist/{name}{hash}{ext}\"",
    "build:styles": "lessc assets/styles/main.less dist/main.css --source-map=dist/main.css.map && hashmark -s -l 8 -m assets.json dist/main.css \"dist/{name}{hash}{ext}\"",
    "build:markup": "pug -P assets/markup/index.pug --obj assets.json -o dist",
    "test": "karma start --singleRun",
    "watch": "parallelshell \"npm run watch:test -s\" \"npm run watch:build -s\"",
    "watch:test": "karma start",
    "watch:build": "nodemon -q -w assets/ --ext \".\" --exec \"npm run build\"",
    "open:prod": "opener http://example.com",
    "open:stage": "opener http://staging.example.internal",
    "open:dev": "opener http://localhost:9090",
    "deploy:stage": "s3-cli sync ./dist/ s3://aws-website-onlyhead-dwhs2/",
    "serve": "http-server -p 9090 dist/",
    "live-reload": "live-reload --port 9091 dist/",
    "dev": "npm run open:dev -s && parallelshell \"npm run live-reload -s\" \"npm run serve -s\" \"npm run watch -s\""
  }
}
